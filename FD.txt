Domain(
	 	programDepartmentName,
	 	programDepartmentAbr,
	 	programName,
	 	programAbr,
	 	branchName,
		mandatoryBranch,
		mandatoryProgram,
		recommendedBranch,
	 	ssn,
	 	studentName,
	 	login,
		courseDepartmentName,
		courseDepartmentAbr,
	 	code,
	 	coursename,
	 	credits,
	 	seats,
        	prerequisite,
	 	position,
	 	grade,
 		classificationName
 )

super keys: (ssn, code, classificationName), (login, code, classificationName)

A student can only have one relationship to a course.
Both ssn and login is unique values of a student.
Code is the only unique value of a course.
A course can have zero or more classifications.
Thus the only superkeys are: (code, classificationName, ssn or login).

Step 1, identify all relations that doesnt violate BCNF, that is relations that are either trivial or superkeys:

Functional dependencies:
									                		BCNF:
programDepartmentName		-> programDepartmentAbr									Trivial
programDepartmentAbr		-> programDepartmentName								Trivial
programName			-> (programAbr,programDepartmentName,mandatoryProgram)					
ssn				-> (studentName,login,programName,branchName)						
login				-> (studentName,ssn,programName,branchName)						
courseDepartmentName		-> courseDepartmentAbr									Trivial
courseDepartmentAbr		-> courseDepartmentName									Trivial
code				-> (coursename,credits,seats,prerequisite,classificationName,courseDepartmentName)	
(branchName,programName)	-> (mandatoryBranch,recommendedBranch)							
(code,ssn)			-> (position,grade)									
(code,login)			-> (position,grade)									
(ssn,code,classificationName)	-> "Everything"										Superkey
(login,code,classificationName)	-> "Everything"										Superkey

Step 2: we decide to use ssn, instead of login, as primary key for student

Step 3: Follow the domain description closely. When making the FD-schema.
